
{%- assign widths = '180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2100, 2260, 2450, 2700, 3000, 3350, 3750, 4100' -%}

{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{% assign inner_border_radius = section.settings.border_radius | minus: section.settings.border_width %}

{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  #WP--{{ section.id }} {
    --main-font: {{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }};
    --main-font-weight: {{ section.settings.main_font.weight }};
    --main-font-style: {{ section.settings.main_font.style }};
    --heading-font: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    --heading-font-weight: {{ section.settings.heading_font.weight }};
    --heading-font-style: {{ section.settings.heading_font.style }};
  }
{%- endif -%}

#WP--{{ section.id }} {
  background: {{ section.settings.background_color }};
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
  --play-button-size: 50px;
}

#WP--{{ section.id }} .wbs__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
  margin: 0 auto;
}

#WP--{{ section.id }} .wbs__heading {
  text-transform: none;
  text-align: center;
  margin: 0 0 1em;
  color: {{ section.settings.heading_color }};
  line-height: calc(3px + 2ex + 3px);
  font-size: calc(var(--WP-g-heading-size, var(--WP-heading-size, 35px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--heading-font);
  font-weight: var(--heading-font-weight);
  font-style: var(--heading-font-style);
  {%- endif -%}
}

{%- if section.settings.desktop_display == 'scroll' -%}
  #WP--{{ section.id }} .wbs__sizer {
    {% comment %} margin-right: 0; {% endcomment %}
  }

  #WP--{{ section.id }} .wbs__testimonials-wrapper {
    flex-wrap: nowrap;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    justify-content: flex-start;
    scroll-snap-type: x mandatory;
    scroll-padding: 20px;
    margin-left: 0;
  }

  #WP--{{ section.id }} .wbs__flex-item {
    min-width: calc(100%/{{ section.settings.per_row }} + 1vw);
    scroll-snap-align: start;
    position: relative;
    margin-bottom: 20px;
    border-radius: {{ section.settings.border_radius }}px;
  }

  #WP--{{ section.id }} ::-webkit-scrollbar {
    -webkit-appearance: none;
    background-color: rgba(0,0,0,0);
    width: 7px;
    height: 3px;
  }

  #WP--{{ section.id }} ::-webkit-scrollbar-track,
   ::-webkit-scrollbar-corner { /* Background */
    background: #D8D8D8;
  }

  #WP--{{ section.id }} ::-webkit-scrollbar-thumb {
    border-radius: 0px;
    background-color: #000000;
    -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
  }
{%- else -%}
  #WP--{{ section.id }} .wbs__testimonials-wrapper {
    flex-wrap: wrap;
  }

  #WP--{{ section.id }} .wbs__flex-item {
    flex: 0 0 calc(100%/{{ section.settings.per_row }} - 20px);
    border-radius: {{ section.settings.border_radius }}px;
  }
{%- endif -%}

#WP--{{ section.id }} .wbs__testimonials-wrapper {
  justify-content: flex-start;
  gap: 20px;
  display: flex;
}

#WP--{{ section.id }} .wbs__flex-item {
  height: auto;
  border: {{ section.settings.border_width }}px solid {{ section.settings.border_color }};
  background: {{ section.settings.text_background_color }};
}

#WP--{{ section.id }} .wbs__inner-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 2em;
  text-align: center;
  position: relative;
  overflow: hidden;
}

#WP--{{ section.id }} .wbs__youtube-video {
  aspect-ratio: 16 / 9;
  width: 100%;
  display: block;
  border-radius: {{ inner_border_radius }}px {{ inner_border_radius }}px 0 0;
}

#WP--{{ section.id }} .wbs__hosted-video {
  width: 100%;
  height: auto;
  display: block;
}

#WP--{{ section.id }} .wbs__video-inner-wrapper {
  position: relative;
}

#WP--{{ section.id }} .wbs__play-button,
#WP--{{ section.id }} .wbs__pause-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: var(--play-button-size);
  height: var(--play-button-size);
  fill: {{ section.settings.play_button_color }};
  transition: 0.1s ease;
  cursor: pointer;
}

#WP--{{ section.id }} .wbs__pause-button {
  opacity: 0;
  transition: 0.1s ease;
  pointer-events: none;
  width: calc(var(--play-button-size)/1.5);
  height: calc(var(--play-button-size)/1.5);
  fill: {{ section.settings.play_button_color }};
}

#WP--{{ section.id }} .wbs__video-wrapper:hover {
  border-color: red;
}

#WP--{{ section.id }} .wbs__video-wrapper:hover .wbs__pause-button.wbs__playing {
  opacity: 100;
  pointer-events: initial;
}

#WP--{{ section.id }} .wbs__play-button path,
#WP--{{ section.id }} .wbs__pause-button path {
  pointer-events: none;
}

#WP--{{ section.id }} .wbs__play-button.wbs__playing {
  opacity: 0;
}

#WP--{{ section.id }} .wbs__stars {
  display: flex;
  justify-content: center;
  width: min(80%, 300px);
}

#WP--{{ section.id }} .wbs__star {
  flex: 1 0 auto;
  max-width: 30px;
}

#WP--{{ section.id }} .wbs__star svg path {
  fill: {{ section.settings.star_color }};
}

#WP--{{ section.id }} .wbs__text {
  position: relative;
  text-align: center;
  margin: 0;
  margin-bottom: 20px;
  font-weight: normal;
  color: {{ section.settings.text_color }};
  font-size: calc(var(--WP-g-text-size, var(--WP-text-size, 19px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#WP--{{ section.id }} .wbs__author {
  margin: 0;
  color: {{ section.settings.text_color }};
  font-weight: bold;
  font-size: 0.9em;
  font-style: italic;
  text-transform: none;
  font-size: calc(var(--WP-g-subtext-size, var(--WP-subtext-size, 14px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}
</style>

<div id="WP--{{ section.id }}" class="wbs__section">
  <div class="wbs__sizer">
    {%- if section.settings.heading != blank -%}
      <h2 class="wbs__heading">{{ section.settings.heading }}</h2>
    {%- endif -%}
    <div class="wbs__testimonials-wrapper">
      {%- for block in section.blocks -%}
        {%- assign star_rating = block.settings.star_rating | default: 3 -%}
        {%- if star_rating > 5 -%}
          {%- assign star_rating = 5 -%}
        {%- endif -%}
        {%- if star_rating < 1 -%}
          {%- assign star_rating = 1 -%}
        {%- endif -%}
        <div class="wbs__flex-item">
          <div class="wbs__inner-content">
            {%- if block.type == 'testimonial' -%}
              <p class="wbs__text">{{ block.settings.testimonial_text }}</p>
              <p class="wbs__author">{{ block.settings.author }}</p>
              <div class="wbs__stars">
                {%- for i in (1..star_rating) -%}
                  <span class="wbs__star">
                    <svg viewBox="0 0 24 24">
                      <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/>
                    </svg>
                  </span>
                {%- endfor -%}
              </div>
            {%- endif -%}
          </div>
        </div>
      {%- endfor -%}
    </div>
  </div>
</div>
{%- endcapture -%}

{{ minify }}


{% schema %}
{
  "name": "Testimonials - video",
  "class": "WP__testimonials-video",
  "settings": [
     {
        "type": "paragraph",
        "content": "Support WebSensePro by [Subscribing our Channel](https:\/\/youtube.com\/@websensepro?sub_confirmation=1)"
      },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Some kind words."
    },
    {
      "type": "range",
      "id": "per_row",
      "label": "Testimonials per row",
      "default": 4,
      "min": 1,
      "max": 5
    },
    {
      "type": "select",
      "id": "video_style",
      "label": "Video style",
      "default": "control_bar",
      "options": [
        {
          "value": "control_bar",
          "label": "Control bar"
        },
        {
          "value": "play_button",
          "label": "Play button"
        }
      ],
      "info": "Does not apply to Youtube or Vimeo videos."
    },
    {
      "type": "select",
      "id": "desktop_display",
      "label": "Display",
      "default": "grid",
      "options": [
        {
          "value": "scroll",
          "label": "Scroll"
        },
        {
          "value": "grid",
          "label": "Grid"
        }
      ]
    },
    {
      "type": "header",
      "content": "📱 Mobile"
    },
    {
      "type": "select",
      "id": "mobile_display",
      "label": "Mobile display",
      "default": "scroll",
      "options": [
        {
          "value": "scroll",
          "label": "Scroll"
        },
        {
          "value": "grid",
          "label": "Grid"
        }
      ]
    },
    {
      "type": "header",
      "content": "Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 60,
      "max": 120,
      "step": 5,
      "default": 100,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "Design"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "star_color",
      "label": "Testimonial star color",
      "default": "#121212"
    },
     {
      "type": "color",
      "id": "play_button_color",
      "label": "Play button color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "border_width",
      "label": "Border width",
      "default": 1,
      "min": 0,
      "max": 12,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Border radius",
      "default": 0,
      "min": 0,
      "max": 50,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 80,
      "max": 100,
      "step": 5,
      "default": 95,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint for content."
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 40,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin",
      "label": "Outer margin",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 0,
      "step": 5,
      "unit": "px"
    }
  ],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        {
          "type": "video",
          "id": "html5_video",
          "label": "Hosted video"
        },
        {
          "type": "video_url",
          "id": "youtube_video",
          "label": "YouTube video (optional)",
          "accept": ["youtube"]
        },
       {
  "type": "range",
  "id": "star_rating",
  "label": "Star Rating",
  "default": 3,
  "min": 1,
  "max": 5
},

        {
          "type": "richtext",
          "id": "title",
          "label": "Testimonial",
          "default": "<p>Best product ever! Highly recommend.</p>"
        },
        {
          "type": "text",
          "id": "link_label",
          "label": "Link label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimonials",
      "blocks": [
        {
          "type": "testimonial"
        },
        {
          "type": "testimonial"
        },
        {
          "type": "testimonial"
        },
        {
          "type": "testimonial"
        }
      ]
    }
  ]
}
{% endschema %}

{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-wbs="{{ section.id }}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }}
  }
</script>
{%- comment -%} JavaScript {%- endcomment -%}
<script
  data-wbs-js="{{ section.id }}"
  type="module"
  defer
>
(function(){
  const wbsPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('wbs__animation-applied');
      }
    },
    playVideo: function(play_button){
      const video = play_button.previousElementSibling;
      const pause_button = play_button.nextElementSibling;
      video.play();
      play_button.classList.add('wbs__playing');
      pause_button.classList.add('wbs__playing')
      video.addEventListener("ended", (event) => {
        play_button.classList.remove('wbs__playing');
        pause_button.classList.remove('wbs__playing');
      });
    },
    pauseVideo: function(pause_button){
      const video = pause_button.parentElement.querySelector('.wbs__hosted-video');
      const play_button = pause_button.parentElement.querySelector('.wbs__play-button');
      video.pause();
      play_button.classList.remove('wbs__playing');
      pause_button.classList.remove('wbs__playing');
    },
    load: function(section){
      const play_buttons = section.querySelectorAll(`.wbs__play-button`);
      const pause_buttons = section.querySelectorAll(`.wbs__pause-button`);

      play_buttons.forEach((play_button) => {
        play_button.addEventListener('click', (e) => {
          this.playVideo(e.target)
        });
      });

      pause_buttons.forEach((pause_button) => {
        pause_button.addEventListener('click', (e) => {
          this.pauseVideo(e.target)
        });
      });

      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: [0, 0.25, 0.5, 0.75, 1]
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }
    },
    unload: function(section){
      section.classList.remove('wbs__animation-applied')
    }
  }
  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-wbs="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#WP--${e.detail.sectionId}`);
    if (sectionId == wbsPack.settings.id){
      wbsPack.unload(section);
    }
  });
  wbsPack.settings = JSON.parse(document.querySelector('[data-wbs="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#WP--${sectionId}`);
  if (sectionId == wbsPack.settings.id){
    wbsPack.load(section);
  }
})()
</script>